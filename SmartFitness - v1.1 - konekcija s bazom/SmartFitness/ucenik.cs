//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections;

namespace SmartFitness
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel;

    public partial class ucenik
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public ucenik()
        {
            this.natjecanje_ucenik = new HashSet<natjecanje_ucenik>();
            this.sport_ucenik = new HashSet<sport_ucenik>();
            this.vjezba_ucenik = new HashSet<vjezba_ucenik>();
        }
    
        public int id_ucenika { get; set; }
        public string ime { get; set; }
        public string prezime { get; set; }
        public int razred { get; set; }
        public int id_korisnika { get; set; }
    
        public virtual korisnik korisnik { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<natjecanje_ucenik> natjecanje_ucenik { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<sport_ucenik> sport_ucenik { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<vjezba_ucenik> vjezba_ucenik { get; set; }

        public static BindingList<ucenik> DohvatiUcenike()
        {
            BindingList<ucenik> lista = null;
            using (var db = new SmartFitnessEntities())
            {
                lista = new BindingList<ucenik>(db.uceniks.ToList());
            }

            return lista;
        }

        public static ArrayList DohvatiSveOcijeneUcenika(int ucenikId)
        {
            ArrayList list = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (from su in db.sport_ucenik
                        join s in db.sports on su.sport_id_sporta equals s.id_sporta
                        join u in db.uceniks on su.ucenik_id_ucenika equals u.id_ucenika
                        where su.ucenik_id_ucenika == ucenikId
                        select new
                        {
                            Sport = s.naziv,
                            Ocijena = su.ocijena,
                            vjezba_sport = su.id_ucenik_sport
                        }).ToList();
                list.AddRange(lista);
            }
            return list;
        }

        public static BindingList<ucenik> DohvatiUcenikeKojiSuNaVjezbama()
        {
            BindingList<ucenik> listaUcenika = null;
            using (var entities = new SmartFitnessEntities())
            {
                listaUcenika = new BindingList<ucenik>(entities.uceniks
                    .Where(o => o.vjezba_ucenik.Count > 0).ToList());
            }
            return listaUcenika;
        }

        public static ArrayList DohvatiNajboljeUcenikeNaOdabranomSportu(int sportId)
        {
            ArrayList najboljiUceniciNaSportu = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (from su in db.sport_ucenik
                        join s in db.sports on su.sport_id_sporta equals s.id_sporta
                        join u in db.uceniks on su.ucenik_id_ucenika equals u.id_ucenika
                        where s.id_sporta == sportId 
                        select new
                        {
                            Id = u.id_ucenika,
                            Ime = u.ime,
                            Prezime = u.prezime,
                            Razred = u.razred,
                            Sport = s.naziv,
                            Ocijena = su.ocijena
                        }).OrderByDescending(o => o.Ocijena).ToList();
                najboljiUceniciNaSportu.AddRange(lista);
            }
            return najboljiUceniciNaSportu;
        }

        public static ArrayList DohvatiSveUcenikeNaOdabranomNatjecanju(int natjecanjeId)
        {
            ArrayList uceniciNaOdabranomNatjecanju = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (from n in db.natjecanjes
                        join nu in db.natjecanje_ucenik on n.id_natjecanja equals nu.natjecanje_id_natjecanja
                        join u in db.uceniks on nu.ucenik_id_ucenika equals u.id_ucenika
                        join s in db.sports on n.id_sporta equals s.id_sporta
                        where nu.natjecanje_id_natjecanja == natjecanjeId
                        select new
                        {
                            Ime = u.ime,
                            Prezime = u.prezime,
                            Razred = u.razred
                        }).ToList();
                uceniciNaOdabranomNatjecanju.AddRange(lista);
            }
            return uceniciNaOdabranomNatjecanju;
        }

        public static ucenik DohvatiUcenikaPoIdu(int ucenikId)
        {
            ucenik ucenik = null;
            using (var db = new SmartFitnessEntities())
            {
                ucenik = db.uceniks.FirstOrDefault(u => u.id_ucenika == ucenikId);
            }
            return ucenik;
        }

        public static ArrayList PretrazivanjeUcenika(string ime)
        {
            ArrayList listaUcenika = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (from su in db.sport_ucenik
                     join s in db.sports on su.sport_id_sporta equals s.id_sporta
                     join u in db.uceniks on su.ucenik_id_ucenika equals u.id_ucenika
                     where u.ime.Contains(ime) || u.prezime.Contains(ime)
                     select new
                     {
                         Id = u.id_ucenika,
                         Ime = u.ime,
                         Prezime = u.prezime,
                         Razred = u.razred,
                         Disciplina = s.disciplina,
                         Ocijena = su.ocijena
                     }).ToList();
                listaUcenika.AddRange(lista);
            }
            return listaUcenika;
        }

        public static ArrayList DohvatiOcijeneUcenika(int sportId)
        {
            ArrayList list = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (from su in db.sport_ucenik
                     join s in db.sports on su.sport_id_sporta equals s.id_sporta
                     join u in db.uceniks on su.ucenik_id_ucenika equals u.id_ucenika
                     where s.id_sporta == sportId
                     select new
                     {
                         Id = u.id_ucenika,
                         Ime = u.ime,
                         Prezime = u.prezime,
                         Razred = u.razred,
                         Disciplina = s.disciplina,
                         Ocijena = su.ocijena
                     }).ToList();
                list.AddRange(lista);
            }
            return list;
        }
        
        public static void DodajUcenika(string ime,string prezime, int razred)
        {           

                using (var db = new SmartFitnessEntities())
                {
                    ucenik ucenik = new ucenik
                    {
                        ime = ime,
                        prezime = prezime,
                        razred = razred,
                        id_korisnika = 3
                    };
                    db.uceniks.Add(ucenik);
                    db.SaveChanges();
                    
                }
   
        }
        public static void AzurirajUcenika(string ime, string prezime, int razred,ucenik selektirani)
        {
            using (var db = new SmartFitnessEntities())
            {
                db.uceniks.Attach(selektirani);
                selektirani.ime =ime;
                selektirani.prezime = prezime;
                selektirani.razred = razred;
                selektirani.id_korisnika = 3;


                db.SaveChanges();
               
            }
        }
        public static void ObrisiUcenika(ucenik selektirani)
        {
            using (var db = new SmartFitnessEntities())
            {
                db.uceniks.Attach(selektirani);
                db.uceniks.Remove(selektirani);
                db.SaveChanges();

            }
        }

        
        
        public static ArrayList PretrazivanjeUcenikaBezSporta(string ime)
        {
            ArrayList listaUcenika = new ArrayList();
            using (var db = new SmartFitnessEntities())
            {
                var lista =
                    (
                    from u in db.uceniks.Where(o => o.sport_ucenik.Count == 0)


                     where u.ime.Contains(ime) || u.prezime.Contains(ime)
                     select new
                     {
                         Id = u.id_ucenika,
                         Ime = u.ime,
                         Prezime = u.prezime,
                         Razred = u.razred,
                         
                     }).ToList();
                listaUcenika.AddRange(lista);
            }
            return listaUcenika;
        }     
    }
}
